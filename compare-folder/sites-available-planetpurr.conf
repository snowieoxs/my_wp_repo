fastcgi_cache_path /home/yepp/purr.planetpurr.net/cache levels=1:2 keys_zone=purr.planetpurr.net:100m inactive=60m;

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name purr.planetpurr.net;

    ssl_certificate /etc/letsencrypt/live/purr.planetpurr.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/purr.planetpurr.net/privkey.pem;

    access_log /home/yepp/purr.planetpurr.net/logs/access.log;
    error_log /home/yepp/purr.planetpurr.net/logs/error.log;

    root /home/yepp/purr.planetpurr.net/public/;
    index index.php;
    
    set $skip_cache 0;
    
    # POST requests should always go to PHP
    if ($request_method = POST) {
        set $skip_cache 1;
    }
    
    # URLs containing query strings should always go to PHP
    if ($query_string != "") {
        set $skip_cache 1;
    }
    
    # Don't cache uris containing the following segments
    if ($request_uri ~* "/wp-admin/|/wp-json/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
        set $skip_cache 1;
    }
    
    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
    }

    # Donâ€™t use cache for WooCommerce pages
    if ($request_uri ~* "/(cart|checkout|my-account)/*$") {
        set $skip_cache 1;
    }
    
    # Don't use the cache when cart contains items
    if ($http_cookie ~* "woocommerce_items_in_cart") {
        set $skip_cache 1;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
        fastcgi_index index.php;
        include fastcgi.conf;

        fastcgi_cache purr.planetpurr.net;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache_valid 60m;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name www.purr.planetpurr.net;

    ssl_certificate /etc/letsencrypt/live/purr.planetpurr.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/purr.planetpurr.net/privkey.pem;

    return 301 https://purr.planetpurr.net$request_uri;
}

server {
    listen 80;
    listen [::]:80;

    server_name purr.planetpurr.net www.purr.planetpurr.net;

    return 301 https://purr.planetpurr.net$request_uri;
}